CREATE OR REPLACE PROCEDURE interest_looking_forward_pre_payment_calc @deal VARCHAR(16), @fec_pre_pago DATE
AS

	DECLARE @fcd DATE = (SELECT MAX(FEC_DATO) FROM DWH_DT_BASE_PRE_PAGOS)

	DROP TABLE IF EXISTS DWH_DT_PROYECCION_PRE_PAGO
	SELECT * INTO DWH_DT_PROYECCION_PRE_PAGO FROM DWH_DT_BASE_PRE_PAGOS WHERE 1 = 2
	INSERT INTO DWH_DT_PROYECCION_PRE_PAGO(SELECT * FROM DWH_DT_BASE_PRE_PAGOS WHERE FEC_DATO = @fcd AND COD_DEAL = @deal)

	-- Generar fechas looking forward y Day_Weight
	DECLARE @FECHA DATE = (DATEADD (DAY, 1, @fcd)), @DAY_WEIGHT INTEGER

	WHILE @FECHA < @fec_pre_pago
		BEGIN
			INSERT INTO DWH_DT_PROYECCION_PRE_PAGO (FEC_DATO)VALUES(@FECHA)
			SET @DAY_WEIGHT = (SELECT DATEDIFF(DAY, FECHA, (SELECT MIN(FECHA) FROM DWH_DT_CALENDARIO_TASA_RFR WHERE FECHA > @FECHA AND STRING_SEPARADO = 'W' AND CCY = 'SFR')) DAY_WEIGHT FROM DWH_DT_CALENDARIO_TASA_RFR WHERE FECHA = @FECHA AND STRING_SEPARADO = 'W' AND CCY = 'SFR')
			UPDATE DWH_DT_PROYECCION_PRE_PAGO SET DAY_WEIGHT = @DAY_WEIGHT WHERE FEC_DATO = @FECHA
			SET @FECHA = (DATEADD (DAY, 1, @FECHA))
		END
	
	-- Replicar información día de fecha de notificación
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET COD_DEAL = @deal
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET LCY_AMOUNT = (SELECT LCY_AMOUNT FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET RFR_COMPOUNDING_TYPE = (SELECT RFR_COMPOUNDING_TYPE FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET LOOK_BACK_DAYS = (SELECT LOOK_BACK_DAYS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd)
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET LOCK_OUT_DAYS = (SELECT LOCK_OUT_DAYS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd)
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET NXT_SCH_DUE_DT = (SELECT NXT_SCH_DUE_DT FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd)
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET INTEREST_DAY_BASIS = (SELECT INTEREST_DAY_BASIS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd)
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET TASA_SPREAD = (SELECT TASA_SPREAD FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET TASA_CAS = (SELECT TASA_CAS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET FEC_NOTIFICACION = (SELECT FEC_NOTIFICACION FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET FECI = (SELECT FECI FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET CUSTOMER_ID = (SELECT CUSTOMER_ID FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 
	UPDATE DWH_DT_PROYECCION_PRE_PAGO SET CUSTOMER_NAME = (SELECT CUSTOMER_NAME FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) 

	-- Tabla solo de tasas sin fines de semana ni feriados
	IF (SELECT COD_MODULO FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) = 'DV'
		BEGIN 
			DROP TABLE IF EXISTS DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS
			CREATE TABLE DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS(EFFECTIVE_DATE DATE, TENOR INTEGER, TASA_BASE DECIMAL(13,8), STRING_SEPARADO VARCHAR(1))
			INSERT INTO DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS(EFFECTIVE_DATE, TENOR, TASA_BASE, STRING_SEPARADO)
			(SELECT T1.EFFECTIVE_DATE, T1.TENOR_CODE AS TENOR, T1.INTEREST_RATE AS TASA_BASE, T2.STRING_SEPARADO FROM DWH_AU_SOFR_DV T1
			LEFT JOIN DWH_DT_CALENDARIO_TASA_RFR T2 ON T1.EFFECTIVE_DATE = T2.FECHA
			WHERE 
			T1.TENOR_CODE = (SELECT LOOK_BACK_DAYS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) AND 
			T1.BRANCH = (SELECT COD_BRANCH FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) AND
			T1.EFFECTIVE_DATE <= (SELECT MAX(FEC_DATO) FROM DWH_DT_PROYECCION_PRE_PAGO)  AND 
			T1.EFFECTIVE_DATE >= (SELECT MIN(FEC_DATO) FROM DWH_DT_PROYECCION_PRE_PAGO) AND
			T2.CCY = 'SFR' AND 
			T2.STRING_SEPARADO = 'W'
			ORDER BY T1.EFFECTIVE_DATE)
		END 
	ELSE 
		BEGIN
			DROP TABLE IF EXISTS DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS
			CREATE TABLE DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS(EFFECTIVE_DATE DATE, TENOR INTEGER, TASA_BASE DECIMAL(13,8), STRING_SEPARADO VARCHAR(1))
			INSERT INTO DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS(EFFECTIVE_DATE, TENOR, TASA_BASE, STRING_SEPARADO)
			(SELECT T1.EFFECTIVE_DATE, T1.TENOR_FROM AS TENOR, T1.INT_RATE AS TASA_BASE, T2.STRING_SEPARADO FROM DWH_AU_SOFR_LB T1
			LEFT JOIN DWH_DT_CALENDARIO_TASA_RFR T2 ON T1.EFFECTIVE_DATE = T2.FECHA
			WHERE 
			T1.TENOR_FROM <= (SELECT LOOK_BACK_DAYS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) AND 
			T1.TENOR_TO >= (SELECT LOOK_BACK_DAYS FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) AND
			T1.BRANCH_CODE = (SELECT COD_BRANCH FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd) AND 
			T1.BORROW_LEND_IND = 'L' AND 
			T1.EFFECTIVE_DATE <= (SELECT MAX(FEC_DATO) FROM DWH_DT_PROYECCION_PRE_PAGO)  AND 
			T1.EFFECTIVE_DATE >= (SELECT MIN(FEC_DATO) FROM DWH_DT_PROYECCION_PRE_PAGO) AND
			T2.CCY = 'SFR' AND 
			T2.STRING_SEPARADO = 'W'
			ORDER BY T1.EFFECTIVE_DATE)
		END

	DECLARE @FECHA_LOCK_OUT DATE = (SELECT FECHA_LOCK_OUT FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd)
	DECLARE @TASA_LOCK_OUT DECIMAL(13,8) = (SELECT TASA_BASE FROM DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS WHERE EFFECTIVE_DATE = (SELECT FECHA_LOCK_OUT FROM DWH_DT_PROYECCION_PRE_PAGO WHERE FEC_DATO = @fcd))

	-- Tabla con logica de Look Back	
	DROP TABLE IF EXISTS DWH_DT_FORWARD_LOOKING_PRE_PAGOS
	CREATE TABLE DWH_DT_FORWARD_LOOKING_PRE_PAGOS(COD_DEAL varchar(21), COD_BRANCH varchar(3), LCY_AMOUNT decimal(38,3), LCY_AMOUNT_ACUM decimal(38,3), NXT_SCH_DUE_DT date, MATURITY_DATE timestamp, COD_MODULO varchar(2), INTEREST_DAY_BASIS varchar(20), TASA_SPREAD decimal(13,8), TASA_CAS decimal(28,7), LOCK_OUT_DAYS decimal(28,7), LOOK_BACK_DAYS decimal(28,7), RFR_COMPOUNDING_TYPE decimal(28,7), DAY_WEIGHT integer, FEC_DATO date, FEC_NOTIFICACION date, CUSTOMER_ID varchar(9), CUSTOMER_NAME varchar(105), FECI integer, FECHA_LOCK_OUT date, FECHA_TASA_APLICADA DATE, TASA_APLICADA DECIMAL(13,8), CONTADOR INTEGER)
	INSERT INTO DWH_DT_FORWARD_LOOKING_PRE_PAGOS(COD_DEAL, COD_BRANCH, LCY_AMOUNT, LCY_AMOUNT_ACUM, NXT_SCH_DUE_DT, MATURITY_DATE, COD_MODULO, INTEREST_DAY_BASIS, TASA_SPREAD, TASA_CAS, LOCK_OUT_DAYS, LOOK_BACK_DAYS, RFR_COMPOUNDING_TYPE, DAY_WEIGHT, FEC_DATO, FEC_NOTIFICACION, CUSTOMER_ID, CUSTOMER_NAME, FECI, FECHA_LOCK_OUT, FECHA_TASA_APLICADA, TASA_APLICADA, CONTADOR)
	(SELECT PRN.COD_DEAL, PRN.COD_BRANCH, PRN.LCY_AMOUNT, PRN.LCY_AMOUNT_ACUM, PRN.NXT_SCH_DUE_DT, PRN.MATURITY_DATE, PRN.COD_MODULO, PRN.INTEREST_DAY_BASIS, PRN.TASA_SPREAD, PRN.TASA_CAS, PRN.LOCK_OUT_DAYS, PRN.LOOK_BACK_DAYS, PRN.RFR_COMPOUNDING_TYPE, PRN.DAY_WEIGHT, PRN.FEC_DATO, PRN.FEC_NOTIFICACION, PRN.CUSTOMER_ID, PRN.CUSTOMER_NAME, PRN.FECI, PRN.FECHA_LOCK_OUT, 
		CASE
			WHEN PRN.FEC_DATO <= @FECHA_LOCK_OUT THEN SEC.EFFECTIVE_DATE
			WHEN PRN.FEC_DATO > @FECHA_LOCK_OUT THEN @FECHA_LOCK_OUT
		END, 
		CASE
			WHEN PRN.FEC_DATO <= @FECHA_LOCK_OUT THEN SEC.TASA_BASE
			WHEN PRN.FEC_DATO > @FECHA_LOCK_OUT THEN @TASA_LOCK_OUT
		END,
		FTH.CONTADOR
	FROM DWH_DT_PROYECCION_PRE_PAGO PRN 
	LEFT JOIN DWH_DT_TASAS_PROYECCIONES_PRE_PAGOS SEC ON PRN.FEC_DATO = SEC.EFFECTIVE_DATE
	LEFT JOIN DWH_DT_CALENDARIO_TASA_RFR TSM ON PRN.FEC_DATO = TSM.FECHA
	LEFT JOIN (SELECT FECHA, ROW_NUMBER( ) OVER (ORDER BY FECHA ASC) AS CONTADOR FROM DWH_DT_CALENDARIO_TASA_RFR WHERE CCY = 'SFR' AND FECHA >= @fcd AND STRING_SEPARADO = 'W') FTH ON PRN.FEC_DATO = FTH.FECHA
	WHERE TSM.CCY = 'SFR' AND TSM.STRING_SEPARADO = 'W'
	ORDER BY PRN.FEC_DATO)

	-- condiciones años bisiestos y euro
	DECLARE @CONDICION1 INTEGER = (SELECT (CASE WHEN YEAR(@fcd) NOT IN (SELECT DISTINCT YEAR FROM DWH_AU_FECHAS WHERE MONTH=2 AND DAY_IN_MONTH=29) THEN 0 ELSE 1 END) FROM DUMMY), @CONDICION2 INTEGER = (SELECT (CASE WHEN @fcd <> (SELECT LAST_DATE FROM DWH_AU_FECHAS WHERE FECHA=@fcd) THEN 0 ELSE 1 END) FROM DUMMY), @NUMERO INTEGER = (SELECT DAY(@fcd) FROM DUMMY)
	
	-- Calculo interes compuesto
	ALTER TABLE DWH_DT_FORWARD_LOOKING_PRE_PAGOS ADD TASA_BASE_COMPUESTO_DIA_N_MENOS_1 DECIMAL(28,12), ADD ACUMULADO_DIA_N_MENOS_1 DECIMAL(28,12), ADD ACUMULADO_DIA_N DECIMAL(28,12), ADD INT_BASE_MOTOR_DIARIO DECIMAL(28,12), ADD INT_MARGEN_MOTOR_DIARIO DECIMAL(28,12), ADD INT_CAS_MOTOR_DIARIO DECIMAL(28,12), ADD INT_FECI_MOTOR_DIARIO DECIMAL(28,12), ADD INT_TOTAL_MOTOR_DIARIO DECIMAL(28,12)

	DECLARE @CONTADOR_MAX INTEGER = (SELECT MAX(CONTADOR) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS), @CONTADOR INTEGER = 1, @CAPITALIZADO DECIMAL(28,12) , @MOVEMENT_AMOUNT DECIMAL(28,12), @ACUMULADO DECIMAL(28,12) = 0

	-- Condicion ultimo dia es un viernes
	IF (SELECT DAY_WEIGHT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = (SELECT MAX(FEC_DATO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS)) > 1
		BEGIN
			UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET DAY_WEIGHT = 1 WHERE FEC_DATO = (SELECT MAX(FEC_DATO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS)
		END


	WHILE @CONTADOR <= (SELECT MAX(CONTADOR) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS)
		BEGIN
			IF (SELECT RFR_COMPOUNDING_TYPE FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) = 2
				BEGIN 
					SET @MOVEMENT_AMOUNT = (SELECT LCY_AMOUNT_ACUM FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd)
					SET @CAPITALIZADO = @ACUMULADO + @MOVEMENT_AMOUNT
					SET @DAY_WEIGHT = (SELECT DAY_WEIGHT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR)
					UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET ACUMULADO_DIA_N_MENOS_1 = (@CAPITALIZADO) WHERE CONTADOR = @CONTADOR
					UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET TASA_BASE_COMPUESTO_DIA_N_MENOS_1 = (@ACUMULADO) WHERE CONTADOR = @CONTADOR

					DECLARE @TASA DECIMAL(13,8) = (SELECT TASA_APLICADA FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR), @INTEREST_DAY_BASIS VARCHAR(20) = (SELECT INTEREST_DAY_BASIS FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR), @INTERES_DIARIO DECIMAL(28,12), @DAY_IN_WEEK INTEGER = (SELECT DAY_IN_WEEK FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR), @IS_IT_HOLIDAY INTEGER = (SELECT IS_IT_HOLIDAY FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR)
					
					IF @INTEREST_DAY_BASIS = ('ACTUAL/360')
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*@DAY_WEIGHT/36000 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/365'
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*@DAY_WEIGHT/36500 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*@DAY_WEIGHT/36500 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*@DAY_WEIGHT/36600 
					ELSE IF @INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 0
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*DAY_WEIGHT/36000 
					ELSE IF @INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 1
						SET @INTERES_DIARIO = @TASA*@CAPITALIZADO*@DAY_WEIGHT/36000 *(31 - @NUMERO)

						UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_BASE_MOTOR_DIARIO = (@INTERES_DIARIO) WHERE CONTADOR = @CONTADOR
						SET @ACUMULADO = @INTERES_DIARIO + @ACUMULADO
						UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET ACUMULADO_DIA_N = (@ACUMULADO) WHERE CONTADOR = @CONTADOR
				END
				
			ELSE 
				BEGIN
					SET @MOVEMENT_AMOUNT = (SELECT LCY_AMOUNT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR)
					SET @DAY_WEIGHT = (SELECT DAY_WEIGHT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR)
					DECLARE @INTEREST_DAY_BASIS VARCHAR(20) = (SELECT INTEREST_DAY_BASIS FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR), @INTERES_DIARIO DECIMAL(28,12), @TASA DECIMAL(13,8) = (SELECT TASA_APLICADA FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE CONTADOR = @CONTADOR)
					IF @INTEREST_DAY_BASIS = ('ACTUAL/360')
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36000 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/365'
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36500 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36500 
					ELSE IF @INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36600 
					ELSE IF @INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 0
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36000 
					ELSE IF @INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 1
						SET @INTERES_DIARIO = @TASA*@MOVEMENT_AMOUNT*@DAY_WEIGHT/36000 *(31 - @NUMERO)
					
					UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_BASE_MOTOR_DIARIO = (@INTERES_DIARIO) WHERE CONTADOR = @CONTADOR
					SET @ACUMULADO = @INTERES_DIARIO + @ACUMULADO
					UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET ACUMULADO_DIA_N = (@ACUMULADO) WHERE CONTADOR = @CONTADOR
				END
										
			SET @CONTADOR = @CONTADOR + 1  
		END 
	
	-- Calculo de interes diario por Tasa Margen por metodo simple
	UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_MARGEN_MOTOR_DIARIO =(
		CASE 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/360' THEN LCY_AMOUNT*TASA_SPREAD*DAY_WEIGHT/36000 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/365' THEN LCY_AMOUNT*TASA_SPREAD*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0 THEN LCY_AMOUNT*TASA_SPREAD*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1 THEN LCY_AMOUNT* TASA_SPREAD*DAY_WEIGHT/36600
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 0 THEN LCY_AMOUNT*TASA_SPREAD*DAY_WEIGHT/36000
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 1 THEN LCY_AMOUNT*TASA_SPREAD*DAY_WEIGHT/36000 *(31- @NUMERO)
		END)

	-- Calculo de interes diario por CAS por metodo simple
	UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_CAS_MOTOR_DIARIO =(
		CASE 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/360' THEN LCY_AMOUNT*TASA_CAS*DAY_WEIGHT/36000 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/365' THEN LCY_AMOUNT*TASA_CAS*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0 THEN LCY_AMOUNT*TASA_CAS*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1 THEN LCY_AMOUNT* TASA_CAS*DAY_WEIGHT/36600
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 0 THEN LCY_AMOUNT*TASA_CAS*DAY_WEIGHT/36000
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 1 THEN LCY_AMOUNT*TASA_CAS*DAY_WEIGHT/36000 *(31- @NUMERO)
		END)
		
	-- Calculo de interes diario por FECI por metodo simple
	UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_FECI_MOTOR_DIARIO =(
		CASE 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/360' THEN LCY_AMOUNT*FECI*DAY_WEIGHT/36000 
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/365' THEN LCY_AMOUNT*FECI*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0 THEN LCY_AMOUNT*FECI*DAY_WEIGHT/36500
			WHEN INTEREST_DAY_BASIS = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1 THEN LCY_AMOUNT* FECI*DAY_WEIGHT/36600
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 0 THEN LCY_AMOUNT*FECI*DAY_WEIGHT/36000
			WHEN INTEREST_DAY_BASIS LIKE '%EURO%' AND @CONDICION2 = 1 THEN LCY_AMOUNT*FECI*DAY_WEIGHT/36000 *(31- @NUMERO)
		END)
		
	UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET INT_TOTAL_MOTOR_DIARIO = ISNULL(INT_BASE_MOTOR_DIARIO,0) + ISNULL(INT_MARGEN_MOTOR_DIARIO,0) + ISNULL(INT_CAS_MOTOR_DIARIO,0)
	
	-- Tasa periódica: Interest Day Basis
	ALTER TABLE DWH_DT_FORWARD_LOOKING_PRE_PAGOS ADD TASA_EFECTIVA DECIMAL(28,12)  
	DECLARE @DAY_BASEIS_TASA_PERIODICA VARCHAR(20) = (SELECT INTEREST_DAY_BASIS FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd), @INTEREST_BASIS INTEGER, @PRODUCT DECIMAL(28,12), @NUM_DAYS INTEGER

	IF @DAY_BASEIS_TASA_PERIODICA = 'ACTUAL/360'
		BEGIN
			SET @INTEREST_BASIS = 360
		END
	ELSE IF @DAY_BASEIS_TASA_PERIODICA = 'ACTUAL/365'
		BEGIN
			SET @INTEREST_BASIS = 365
		END
	ELSE IF @DAY_BASEIS_TASA_PERIODICA = 'ACTUAL/ACTUAL' AND @CONDICION1 = 0 
		BEGIN
			SET @INTEREST_BASIS = 365
		END
	ELSE IF @DAY_BASEIS_TASA_PERIODICA = 'ACTUAL/ACTUAL' AND @CONDICION1 = 1
		BEGIN
			SET @INTEREST_BASIS = 366
		END
	ELSE IF @DAY_BASEIS_TASA_PERIODICA LIKE '%EURO%' AND @CONDICION1 = 0 
		BEGIN
			SET @INTEREST_BASIS = 360
		END
	ELSE IF @DAY_BASEIS_TASA_PERIODICA LIKE '%EURO%' AND @CONDICION1 = 1
		BEGIN
			SET @INTEREST_BASIS = 360*(31 - @NUMERO)
		END

	-- Calculo Tasa Efectiva
	DECLARE @ACCR DECIMAL(28,12) = ((SELECT SUM(INT_BASE_MOTOR_DIARIO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS) + (SELECT (LCY_AMOUNT_ACUM - LCY_AMOUNT) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd))
	DECLARE @NOMINAL DECIMAL(28,12) = (SELECT LCY_AMOUNT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd)
	DECLARE @NUM_DAY INTEGER = DATEDIFF(DAY, (SELECT MIN(FEC_DATO) FROM DWH_DT_INT_CONCILIACION_H WHERE COD_DEAL = @deal), (SELECT MAX(FEC_DATO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE COD_DEAL = @deal))
	DECLARE @TASA_EFECTIVA DECIMAL(28,12) = (@ACCR/@NOMINAL)*(@INTEREST_BASIS/@NUM_DAY)
	
	UPDATE DWH_DT_FORWARD_LOOKING_PRE_PAGOS SET TASA_EFECTIVA = @TASA_EFECTIVA

	-- INTERESES PREVIOS 
	DECLARE @OPTION_1 DATE = (SELECT MAX(NXT_SCH_DUE_DT) FROM TMP_DT_INTERES_COMPUESTO_H WHERE COD_DEAL = @deal AND NXT_SCH_DUE_DT < (SELECT NXT_SCH_DUE_DT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd))
	DECLARE @OPTION_2 DATE = (SELECT MIN(FEC_DATO) FROM TMP_DT_INTERES_COMPUESTO_H WHERE COD_DEAL = @deal AND NXT_SCH_DUE_DT = (SELECT NXT_SCH_DUE_DT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd))
	DECLARE @OPTION_3 DATE = (ISNULL((SELECT MAX(NXT_SCH_DUE_DT) FROM TMP_DT_INTERES_COMPUESTO_H WHERE COD_DEAL = @deal AND NXT_SCH_DUE_DT < (SELECT NXT_SCH_DUE_DT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd)), (SELECT MIN(FEC_DATO) FROM TMP_DT_INTERES_COMPUESTO_H WHERE COD_DEAL = @deal AND NXT_SCH_DUE_DT = (SELECT NXT_SCH_DUE_DT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd))))
	DECLARE @ACCR_PREVIO DECIMAL(28, 12) = (SELECT SUM(INT_TOTAL_MOTOR_DIARIO) FROM DWH_DT_INT_CONCILIACION_H WHERE COD_DEAL = @deal AND FEC_DATO >= @OPTION_3 AND FEC_DATO < @fcd)
	DECLARE @ACCR_DIA DECIMAL(28, 12) = (SELECT SUM(INT_TOTAL_MOTOR_DIARIO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS)
	
	-- TABLA RESUMIDA BACK OFFICE
	DROP TABLE IF EXISTS DWH_DT_PROYECCION_PRE_PAGO_SOFR
	CREATE TABLE DWH_DT_PROYECCION_PRE_PAGO_SOFR(DEAL_ID varchar(21), CUSTOMER_ID varchar(9), CUSTOMER_NAME varchar(105), FEC_VENCIMIENTO timestamp, FEC_PRE_PAGO date, FEC_CONSULTA date, TASA_TOTAL decimal(13,8), TASA_BASE_PROMEDIO decimal(13,8), TASA_MARGEN decimal(13,8), TASA_CAS decimal(28,7), CAPITAL decimal(38,3), INT_CALC_PROYECCION decimal(28,12), INT_CALC_MOTOR decimal(28,12), INT_CALC_TOTAL decimal(28,12), FECI decimal(28,12), COMISIONES decimal(28,12), USUARIO varchar(105))
	INSERT INTO DWH_DT_PROYECCION_PRE_PAGO_SOFR(DEAL_ID, CUSTOMER_ID, CUSTOMER_NAME, FEC_VENCIMIENTO, FEC_PRE_PAGO, FEC_CONSULTA, TASA_TOTAL, TASA_BASE_PROMEDIO, TASA_MARGEN, TASA_CAS, CAPITAL, INT_CALC_PROYECCION, INT_CALC_MOTOR, INT_CALC_TOTAL, FECI)
	(
	SELECT 
	(SELECT COD_DEAL FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS COD_DEAL , 
	(SELECT CUSTOMER_ID FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS CUSTOMER_ID , 
	(SELECT CUSTOMER_NAME FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS CUSTOMER_NAME ,  
	(SELECT MATURITY_DATE FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS MATURITY_DATE, 
	@fec_pre_pago AS FEC_PRE_PAGO, 
	@fcd AS FEC_CONSULTA, 
	TASA_EFECTIVA + TASA_SPREAD + TASA_CAS AS TASA_TOTAL, 
	(SELECT TASA_EFECTIVA FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS TASA_EFECTIVA , 
	(SELECT TASA_SPREAD FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS TASA_SPREAD , 
	(SELECT TASA_CAS FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS TASA_CAS , 
	(SELECT LCY_AMOUNT FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS WHERE FEC_DATO = @fcd) AS LCY_AMOUNT , 
	@ACCR_DIA AS INT_CALC_PROYECCION,
	@ACCR_PREVIO AS INT_CALC_MOTOR,
	(@ACCR_DIA + @ACCR_PREVIO) AS INT_CALC_TOTAL, 
	(SELECT SUM(INT_FECI_MOTOR_DIARIO) FROM DWH_DT_FORWARD_LOOKING_PRE_PAGOS) AS FECI
	FROM DUMMY)

	SELECT * FROM DWH_DT_PROYECCION_PRE_PAGO_SOFR