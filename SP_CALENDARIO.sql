-- SP MESES
CREATE OR REPLACE PROCEDURE calcula_dias_holiday_por_mes @months INTEGER, @year INTEGER, @moneda VARCHAR(3)
AS
    DECLARE @COUNTER INTEGER = 1, @STRING_CHAIN VARCHAR(31), @SEPARATOR VARCHAR(5)

    DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO
    CREATE TABLE HOLIDAY_PRUEBA_TABLE_SEPARADO(CCY VARCHAR(3), YEAR INTEGER, COUNTER_MONTH INTEGER, COUNTER INTEGER, STRING_SEPARADO VARCHAR(1))

    WHILE @COUNTER <= (SELECT NUM_DAYS_IN_MONTH FROM DWH_AU_FECHAS WHERE YEAR = @year AND MONTH = @months AND DAY_IN_MONTH = 1)
        BEGIN
            SET @STRING_CHAIN = (SELECT HOLIDAY_LIST FROM DWH_AU_RFR_HOLIDAY WHERE YEAR = @year AND MONTH = @months AND CCY = @moneda)
            SET @SEPARATOR = SUBSTRING(@STRING_CHAIN, @COUNTER, 1)
            INSERT INTO HOLIDAY_PRUEBA_TABLE_SEPARADO (COUNTER, STRING_SEPARADO, COUNTER_MONTH) VALUES (@COUNTER, @SEPARATOR, @months)

            UPDATE HOLIDAY_PRUEBA_TABLE_SEPARADO SET CCY = @moneda
            UPDATE HOLIDAY_PRUEBA_TABLE_SEPARADO SET YEAR = @year
            SET @COUNTER = @COUNTER + 1
        END

-- SP VARIOS MESES	
CREATE OR REPLACE Procedure calcula_dias_holiday_por_año  @year INTEGER, @moneda VARCHAR(3)
AS   
	DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO_2
	CREATE TABLE HOLIDAY_PRUEBA_TABLE_SEPARADO_2(CCY VARCHAR(3), YEAR INTEGER, COUNTER_MONTH INTEGER, COUNTER INTEGER, STRING_SEPARADO VARCHAR(5))

	DECLARE @COUNTER_MONTHS INTEGER = 1
 
	WHILE @COUNTER_MONTHS <= 12
		BEGIN
			EXEC calcula_dias_holiday_por_mes @COUNTER_MONTHS, @year, @moneda
			INSERT INTO HOLIDAY_PRUEBA_TABLE_SEPARADO_2 (CCY, YEAR, COUNTER_MONTH, COUNTER, STRING_SEPARADO)(SELECT * FROM HOLIDAY_PRUEBA_TABLE_SEPARADO)
			SET @COUNTER_MONTHS = @COUNTER_MONTHS + 1
		END

	DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO_3
	CREATE TABLE HOLIDAY_PRUEBA_TABLE_SEPARADO_3(CCY VARCHAR(3), RATE_CODE VARCHAR(10), FECHA DATE, YEAR INTEGER, COUNTER_MONTH INTEGER, COUNTER INTEGER, DAY_IN_WEEK INTEGER, STRING_SEPARADO VARCHAR(2), IS_IT_HOLIDAY INTEGER, IS_IT_WEEKEND INTEGER)
	INSERT INTO HOLIDAY_PRUEBA_TABLE_SEPARADO_3(CCY, FECHA, YEAR, COUNTER_MONTH, COUNTER, DAY_IN_WEEK, STRING_SEPARADO)
	(SELECT SEC.CCY, PRN.FECHA, SEC.YEAR, SEC.COUNTER_MONTH, SEC.COUNTER, PRN.DAY_IN_WEEK, SEC.STRING_SEPARADO FROM DWH_AU_FECHAS PRN 
	INNER JOIN  HOLIDAY_PRUEBA_TABLE_SEPARADO_2 SEC ON PRN.DAY_IN_MONTH = SEC.COUNTER AND PRN.MONTH = SEC.COUNTER_MONTH AND PRN.YEAR = SEC.YEAR WHERE PRN.YEAR = @year 
	ORDER BY PRN.FECHA)

	UPDATE HOLIDAY_PRUEBA_TABLE_SEPARADO_3 SET IS_IT_HOLIDAY = (CASE WHEN STRING_SEPARADO = 'H' AND DAY_IN_WEEK IN (1, 2, 3, 4, 5) THEN 1 ELSE 0 END)
	UPDATE HOLIDAY_PRUEBA_TABLE_SEPARADO_3 SET IS_IT_WEEKEND = (CASE WHEN STRING_SEPARADO = 'H' AND DAY_IN_WEEK IN (6, 7) THEN 1 ELSE 0 END)
	UPDATE HOLIDAY_PRUEBA_TABLE_SEPARADO_3 SET RATE_CODE = (CASE 
		WHEN CCY = 'SFR' THEN 'SOFR'
		WHEN CCY = 'USD' THEN 'LIBOR'
		ELSE 'N/A'
        END)

-- SP VARIOS AÑOS
CREATE OR REPLACE Procedure tabla_calendario_sofr @inicio INTEGER, @moneda VARCHAR(3)
AS 

DROP TABLE IF EXISTS DWH_TMP_SOFR_CALENDAR
CREATE TABLE DWH_TMP_SOFR_CALENDAR(CCY VARCHAR(3), RATE_CODE VARCHAR(10), FECHA DATE, YEAR INTEGER, COUNTER_MONTH INTEGER, COUNTER INTEGER, DAY_IN_WEEK INTEGER, STRING_SEPARADO VARCHAR(2), IS_IT_HOLIDAY INTEGER, IS_IT_WEEKEND INTEGER)

DECLARE @NUMBER_OF_YEARS INTEGER = @inicio, @STOP_NUMBER INTEGER = (SELECT MAX(YEAR) FROM DWH_AU_RFR_HOLIDAY WHERE CCY = @moneda)

WHILE @NUMBER_OF_YEARS <= @STOP_NUMBER
	BEGIN
		EXEC calcula_dias_holiday_por_año @NUMBER_OF_YEARS, @moneda
		INSERT INTO DWH_TMP_SOFR_CALENDAR (CCY, RATE_CODE, FECHA, YEAR, COUNTER_MONTH, COUNTER, DAY_IN_WEEK, STRING_SEPARADO, IS_IT_HOLIDAY, IS_IT_WEEKEND)(SELECT * FROM HOLIDAY_PRUEBA_TABLE_SEPARADO_3 ORDER BY FECHA)
		SET @NUMBER_OF_YEARS = @NUMBER_OF_YEARS + 1
	END
	
-- SP EXECUTION ALL
CREATE OR REPLACE PROCEDURE calendario_de_moneda @moneda_1 VARCHAR(3), @moneda_2 VARCHAR(3)
AS
	DROP TABLE IF EXISTS TMP_DT_CCY_CALENDARIO
	CREATE TABLE TMP_DT_CCY_CALENDARIO(CCY VARCHAR(3), CCY_ID NUMERIC(5,0) IDENTITY)

	INSERT INTO TMP_DT_CCY_CALENDARIO(CCY) VALUES(@moneda_1) 
	INSERT INTO TMP_DT_CCY_CALENDARIO(CCY) VALUES(@moneda_2)
	-- insertar otra moneda

	DECLARE @i INTEGER = 1, @CCY VARCHAR(3), @FECHA INTEGER = (SELECT YEAR(GETDATE()) FROM DUMMY)
	
    DELETE FROM DWH_DT_CALENDARIO_TASA_RFR WHERE YEAR >= @FECHA

    WHILE @i <= (SELECT COUNT(*) FROM TMP_DT_CCY_CALENDARIO)
        BEGIN
            SET @CCY = (SELECT CCY FROM TMP_DT_CCY_CALENDARIO WHERE CCY_ID = @i)
            EXEC tabla_calendario_sofr @FECHA, @CCY
			INSERT INTO DWH_DT_CALENDARIO_TASA_RFR(SELECT * FROM DWH_TMP_SOFR_CALENDAR)
            SET @i = @i + 1 
        END 
	
	DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO 
	DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO_2 
	DROP TABLE IF EXISTS HOLIDAY_PRUEBA_TABLE_SEPARADO_3 
	DROP TABLE IF EXISTS DWH_TMP_SOFR_CALENDAR 
	DROP TABLE IF EXISTS TMP_DT_CCY_CALENDARIO















